#!/usr/bin/env python

# Copyright (c) 2011, Matthew Emmett.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#
#   2. Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


import sys

from pydendro.rwl import read, write, transform

print ''
working_file = raw_input('Working file (will be overwritten): ')

sample = 'null'
while sample != 'done':
    try:
        d = transform(read(working_file), kind='dictionary', key='enumerated')
    except IOError:
        print 'Unable to open working file "%s", exiting.' % working_file
        print ''
        raise SystemExit

    print ''
    print 'Samples (end year shown beside each sample):'
    for k in sorted(d.keys()):
        sys.stdout.write(' %3d: %-8s %4d' % (k, d[k][0], d[k][1]+len(d[k][2])-1))
        if (k+1) % 4 == 0:
            sys.stdout.write('\n')
    sys.stdout.write('\n')

    sample = raw_input('Rotate samples (space separated list, or "done" to exit): ')
    samples = sample.split()

    if 'done' in samples:
        continue

    try:
        rotate = int(raw_input('How many years? '))
    except:
        print 'Huh?'
        continue
    
    for sample in samples:
        try:
            d[int(sample)][1] += rotate
            print 'Sample %s rotated.' % d[int(sample)][0]
        except:
            print 'Sample %s not found, skipping...' % sample

    write(working_file, d)
    print 'Working file updated.'

print ''
